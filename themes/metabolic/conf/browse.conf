#
# Browse configuration
#

# number of seconds to keep cached browses around
# set to 0 to disable caching
cache_timeout = 0

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		action_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [action],
			restrict_to_relationship_types = [],
			
			groupings = {
				label = _(Name), 
				type = _(Type),
				relationship_types = _(Role),
				ca_attribute_dates_value:years = _(Years),
				ca_attribute_dates_value:decades = _(Decades)
			},
			
			group_mode = alphabetical,
			
			label_singular = _(action),
			label_plural = _(actions)
		},	
		award_facet = {
			type = attribute,
			element_code = award,			
			
			label_singular = _(award),
			label_plural = _(awards)
		},	
		lauren_facet = {
			type = attribute,
			element_code = selected2,
			
			# Use the list item code here, *not* 0 and 1 for "yes" and "no"
			single_value = yes,
			label_yes = _(selected),
			label_no = _(not selected),			
			
			label_singular = _(collection item),
			label_plural = _(collection item)
		},	
		conservation_facet = {
			type = attribute,
			element_code = priority,		
			
			label_singular = _(conservation priority),
			label_plural = _(conservation priority)
		},
		decade_facet = {
			type = normalizedDates,
			element_code = creation_date,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _(decade),
			label_plural = _(decades)
		}
		event_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [event],
			restrict_to_relationship_types = [],
			
			groupings = {
				label = _(Name), 
				type = _(Type),
				relationship_types = _(Role),
				ca_attribute_dates_value:years = _(Years),
				ca_attribute_dates_value:decades = _(Decades)
			},
			
			group_mode = alphabetical,
			
			label_singular = _(event),
			label_plural = _(events)
		},
		exhibition_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [exhibition],
			restrict_to_relationship_types = [],
			
			groupings = {
				label = _(Name), 
				type = _(Type),
				relationship_types = _(Role),
				ca_attribute_dates_value:years = _(Years),
				ca_attribute_dates_value:decades = _(Decades)
			},
			
			group_mode = alphabetical,
			
			label_singular = _(exhibitions),
			label_plural = _(exhibitions)
		},		
		gift_facet = {
			type = attribute,
			element_code = gift,			
			
			label_singular = _(gift),
			label_plural = _(gifts)
		},		 
		materials_facet = {
			type = attribute,
			element_code = materialMedium,			
			
			label_singular = _(material/medium),
			label_plural = _(materials/media)
		},		
		month_facet = {
			type = normalizedDates,
			element_code = dates_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = months,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _(month),
			label_plural = _(months)
		},
		next_facet = {
			type = attribute,
			element_code = nextSteps,		
			
			label_singular = _(next step),
			label_plural = _(next steps)
		},
		title_facet = {
			type = label,
			restrict_to_types = [],
			preferred_labels_only = 1,
			
			group_mode = alphabetical,
			
			label_singular = _(object title),
			label_plural = _(object titles)
		},		
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			individual_group_display = 0,
			
			groupings = {
				label = _(Name), 
				type = _(Type),
				relationship_types = _(Role)
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _(people/organizations),
			label_plural = _(people/organizations)
		},	
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _(place),
			label_plural = _(places)
		},	
		project_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [project],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(project),
			label_plural = _(projects)
		},		
		silo_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [silo],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _(silo),
			label_plural = _(silos)
		},	
		storage_location_facet = {
			type = authority,
			table = ca_storage_locations,
			relationship_table = ca_objects_x_storage_locations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display
			hierarchy_limit = 3,
			
			# can be ASC or DESC
			hierarchy_order  = DESC,
			
			label_singular = _(storage location),
			label_plural = _(storage locations)
		},
		subtype_facet = {
			type = attribute,
			element_code = audioFilmType,		
			
			 requires = [type_facet],
			
			label_singular = _(subtype),
			label_plural = _(subtypes)
		},	
		subtype_facet = {
			type = attribute,
			element_code = artType,		
			
			 requires = [type_facet],
			
			label_singular = _(subtype),
			label_plural = _(subtypes)
		},
		subtype_facet = {
			type = attribute,
			element_code = miscellaneousType,		
			
			 requires = [type_facet],
			
			label_singular = _(subtype),
			label_plural = _(subtypes)
		},	
		subtype_facet = {
			type = attribute,
			element_code = photographyType,		
			
			 requires = [type_facet],
			
			label_singular = _(subtype),
			label_plural = _(subtypes)
		},	
		subtype_facet = {
			type = attribute,
			element_code = textualType,		
			
			 requires = [type_facet],
			
			label_singular = _(subtype),
			label_plural = _(subtypes)
		},	
		subtype_facet = {
			type = attribute,
			element_code = toolType,		
			
			 requires = [type_facet],
			
			label_singular = _(subtype),
			label_plural = _(subtypes)
		},				
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp; ⬅ &nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _(term),
			label_plural = _(terms)
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _(type),
			label_plural = _(types)
		},		
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _(year),
			label_plural = _(years)
		}																			
	}
}

# Configuration for object lot browse
ca_object_lots = {
	name = _("Lots"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_object_lots_x_entities,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_object_lots_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_object_lots_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("collection"),
			label_plural = _("collections")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_object_lots_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("Actions/Events/Exhibitions"),
			label_plural = _("Actions/Events/Exhibitions")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_object_lots_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
	}
}
# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	name = _("Entities"),
	facets = {
		action_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [action],
			
			group_mode = alphabetical,
			groupings = {
				label = _(Name), 
				relationship_types = _(Role)
			},
			
			indefinite_article = an,
			label_singular = _("action"),
			label_plural = _("actions")
		},	
		event_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [event],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("event"),
			label_plural = _("events")
		},
		exhibition_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [exhibition],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("exhibition"),
			label_plural = _("exhibitions")
		},
		title_facet = {
			type = label,
			restrict_to_types = [],
			preferred_labels_only = 1,
			
			group_mode = alphabetical,
			
			label_singular = _(name),
			label_plural = _(name)
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},	
		project_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [project],
			
			group_mode = alphabetical,
			
			label_singular = _("project"),
			label_plural = _("project")
		},
		silo_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [silo],
			
			group_mode = alphabetical,
			
			label_singular = _("silo"),
			label_plural = _("silos")
		},		
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_entities_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _(type),
			label_plural = _(types)
		}
	}
}
# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	name = _("Collections"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("People/Organizations"),
			label_plural = _("People/Organizations")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		action_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [action],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("Action"),
			label_plural = _("Actions")
		},
		event_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [event],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("Event"),
			label_plural = _("Events")
		},		
		month_facet = {
			type = normalizedDates,
			element_code = dates_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = months,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _(month),
			label_plural = _(months)
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _(year),
			label_plural = _(years)
		},	
		exhibition_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [exhibition],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("Exhibition"),
			label_plural = _("Exhibitions")
		},		
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
	}
}
# --------------------------------------------------------------------
# Configuration for occurrence browse
ca_occurrences = {
	name = _("Other authorities"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("People/Organizations"),
			label_plural = _("People/Organizations")
		},
		silo_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_collections,
			relationship_table = ca_collections_x_occurrences,
			restrict_to_types = [silo],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Silo"),
			label_plural = _("Silos")
		},	
		project_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_collections,
			relationship_table = ca_collections_x_occurrences,
			restrict_to_types = [project],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Project"),
			label_plural = _("Projects")
		},		
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("object"),
			label_plural = _("objects")
		},
		month_facet = {
			type = normalizedDates,
			element_code = dates_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = months,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _(month),
			label_plural = _(months)
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _(year),
			label_plural = _(years)
		},	
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates,
			normalization = years,
			
			group_mode = alphabetical,
			
			label_singular = _("year"),
			label_plural = _("years")
		},
	}
}

